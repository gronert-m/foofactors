use_git()
use_r("fbind")
load_all()
check()
use_mit_license()
use_mit_license("Mario Gronert")
document()
?fbind
check()
install()
library(foofactors)
a <- factor(c("character", "hits", "your", "eyeballs"))
b <- factor(c("but", "integer", "where it", "counts"))
fbind(a, b)
use_testthat()
use_test("fbind")
test()
use_package("forcats")
use_r("fcount")
load_all()
#> Loading foofactors
fcount(iris$Species)
document()
?use_github
use_readme_rmd()
install()
check()
install()
install()
.libPaths()
install.packages()
?install.packages
install.packages("vctrs", lib = .libPaths()[1])
install.packages("vctrs", lib = .libPaths()[1])
install.packages("vctrs", lib = .libPaths()[2])
install()
devtools
devtools::install_github("gronert-m/foofactors")
library(foofactors)
?fbind
install.packages("tibble", lib = .libPaths()[1])
devtools::install_github("gronert-m/foofactors")
install.packages("tibble", lib = .libPaths()[2])
devtools::install_github("gronert-m/foofactors")
.libPaths()
install.packages("tibble", lib = .libPaths()[1])
devtools::install_github("gronert-m/foofactors")
install.packages("cli", lib = .libPaths()[2])
install.packages("fansi", lib = .libPaths()[2])
install.packages("glue", lib = .libPaths()[2])
install.packages("digest", lib = .libPaths()[2])
install.packages("cli", lib = .libPaths()[1])
install.packages("cli", lib = .libPaths()[1])
install.packages("fansi", lib = .libPaths()[1])
install.packages("glue", lib = .libPaths()[1])
install.packages("digest", lib = .libPaths()[1])
install.packages("cli", lib = .libPaths()[2])
install.packages("fansi", lib = .libPaths()[2])
install.packages("glue", lib = .libPaths()[2])
install.packages("digest", lib = .libPaths()[2])
.libPaths()[1]
install.packages("glue", lib = .libPaths()[1])
install.packages("digest", lib = .libPaths()[1])
document()
document()
devtools::install_github("gronert-m/foofactors")
library(foofactors)
fbind(iris$Species[c(1, 51, 101)], PlantGrowth$group[c(1, 11, 21)])
?fbind()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[1])
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[1])
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[1])
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[1])
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[1])
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[1])
install.packages(c("devtools", "roxygen2", "testthat", "knitr"), lib = .libPaths()[2])
has_devel()
library(devtools)
has_devel()
search()
library(foofactors)
search()
.libsPath()
.libPath()
.libPaths()
#=================================================#
##### LBR 2019 ASCEND Impact #####
# DSA Reporting
# File created: 17/04/2020
# Contact person: Mario Gronert - m.gronert@schisto.org.uk
#=================================================#
#================================================================#
#### Step 1 - Define libraries, working folders, and minutiae ####
#================================================================#
rm(list = ls())
library(dplyr)
library(zoo)
library(reshape2)
library(stringr)
library(openxlsx)
library(tidyr)
options(dplyr.print_max = 1e9)
summarise  <- dplyr::summarise
select <- dplyr::select
setwd("Z:/Countries/Liberia/Impact/2019_ASCEND_F3")
#======================================================#
#### Step 2 - Introduce DSA/ESPEN format function ####
#======================================================#
dsa_sch <- function(data){
data %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = first(format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Urinary
NumPeopleSh = sum(!is.na(shaem_bin)),
PosPeopleSh = sum(shaem_bin == 1, na.rm = T),
Sh = mean(shaem_bin, na.rm = T),
LowSh = mean(shaem_cat == "light intensity", na.rm = T),
HighSh = mean(shaem_cat == "heavy intensity", na.rm = T),
# Intestinal
NumPeopleSm = sum(!is.na(smans_bin)),
PosPeopleSm = sum(smans_bin == 1, na.rm = T),
Sm = mean(smans_bin, na.rm = T),
ModSm = mean(smans_cat == "moderate intensity", na.rm = T),
HighSm = mean(smans_cat == "heavy intensity", na.rm = T),
# Other
Type = "Follow up 3",
Diagnostic = "UF / KK"
)
}
dsa_sth <- function(data){
data %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = first(format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Ascaris
NumPeople_Asc = sum(!is.na(asc_bin)),
PosPeople_Asc = sum(asc_bin == 1, na.rm = T),
Asc = mean(asc_bin, na.rm = T),
Mod_Asc = mean(asc_cat == "moderate intensity", na.rm = T),
High_Asc = mean(asc_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeople_Hkw = sum(!is.na(hkw_bin)),
PosPeople_Hkw = sum(hkw_bin == 1, na.rm = T),
Hkw = mean(hkw_bin, na.rm = T),
Mod_Hkw = mean(hkw_cat == "moderate intensity", na.rm = T),
High_Hkw = mean(hkw_cat == "heavy intensity", na.rm = T),
# Trichuris
NumPeople_Tri = sum(!is.na(tri_bin)),
PosPeople_Tri = sum(tri_bin == 1, na.rm = T),
Tri = mean(tri_bin, na.rm = T),
Mod_Tri = mean(tri_cat == "moderate intensity", na.rm = T),
High_Tri = mean(tri_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeopleSm = sum(!is.na(sth_bin)),
PosPeopleSm = sum(sth_bin == 1, na.rm = T),
Sm = mean(sth_bin, na.rm = T),
# Other
Type = "Follow up 3"
)
}
#==========================================================================#
# Step 3 - Read in clean data ---------------------------------------------
#==========================================================================#
data <- read.csv("3_Clean_data/LBR_IS_FY_19_20_clean_data2020-04-17.csv", stringsAsFactors = F,
na.strings = c("", " ", "NA"))
#==========================================================================#
# Step 4 - Apply, store ---------------------------------------------------
#==========================================================================#
ata %>% group_by(school_code) %>% dsa_sch() %>% select(-1)
data %>% group_by(school_code) %>% dsa_sch() %>% select(-1)
dsa_sch <- function(data){
data %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = min(format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Urinary
NumPeopleSh = sum(!is.na(shaem_bin)),
PosPeopleSh = sum(shaem_bin == 1, na.rm = T),
Sh = mean(shaem_bin, na.rm = T),
LowSh = mean(shaem_cat == "light intensity", na.rm = T),
HighSh = mean(shaem_cat == "heavy intensity", na.rm = T),
# Intestinal
NumPeopleSm = sum(!is.na(smans_bin)),
PosPeopleSm = sum(smans_bin == 1, na.rm = T),
Sm = mean(smans_bin, na.rm = T),
ModSm = mean(smans_cat == "moderate intensity", na.rm = T),
HighSm = mean(smans_cat == "heavy intensity", na.rm = T),
# Other
Type = "Follow up 3",
Diagnostic = "UF / KK"
)
}
dsa_sth <- function(data){
data %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = min(format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Ascaris
NumPeople_Asc = sum(!is.na(asc_bin)),
PosPeople_Asc = sum(asc_bin == 1, na.rm = T),
Asc = mean(asc_bin, na.rm = T),
Mod_Asc = mean(asc_cat == "moderate intensity", na.rm = T),
High_Asc = mean(asc_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeople_Hkw = sum(!is.na(hkw_bin)),
PosPeople_Hkw = sum(hkw_bin == 1, na.rm = T),
Hkw = mean(hkw_bin, na.rm = T),
Mod_Hkw = mean(hkw_cat == "moderate intensity", na.rm = T),
High_Hkw = mean(hkw_cat == "heavy intensity", na.rm = T),
# Trichuris
NumPeople_Tri = sum(!is.na(tri_bin)),
PosPeople_Tri = sum(tri_bin == 1, na.rm = T),
Tri = mean(tri_bin, na.rm = T),
Mod_Tri = mean(tri_cat == "moderate intensity", na.rm = T),
High_Tri = mean(tri_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeopleSm = sum(!is.na(sth_bin)),
PosPeopleSm = sum(sth_bin == 1, na.rm = T),
Sm = mean(sth_bin, na.rm = T),
# Other
Type = "Follow up 3"
)
}
data <- read.csv("3_Clean_data/LBR_IS_FY_19_20_clean_data2020-04-17.csv", stringsAsFactors = F,
na.strings = c("", " ", "NA"))
sch_data <- data %>% group_by(school_code) %>% dsa_sch() %>% select(-1)
stopifnot(all(nrow(sch_data) == n_distinct(data$school_code) &
nrow(sch_data) == n_distinct(data$school_label)))
sch_data
#=================================================#
##### LBR 2019 ASCEND Impact #####
# DSA Reporting
# File created: 17/04/2020
# Contact person: Mario Gronert - m.gronert@schisto.org.uk
#=================================================#
#================================================================#
#### Step 1 - Define libraries, working folders, and minutiae ####
#================================================================#
rm(list = ls())
library(dplyr)
library(zoo)
library(reshape2)
library(stringr)
library(openxlsx)
library(tidyr)
options(dplyr.print_max = 1e9)
summarise  <- dplyr::summarise
select <- dplyr::select
setwd("Z:/Countries/Liberia/Impact/2019_ASCEND_F3")
#======================================================#
#### Step 2 - Introduce DSA/ESPEN format function ####
#======================================================#
dsa_sch <- function(data){
data %>%
mutate(month = format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")) %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = min(month),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Urinary
NumPeopleSh = sum(!is.na(shaem_bin)),
PosPeopleSh = sum(shaem_bin == 1, na.rm = T),
Sh = mean(shaem_bin, na.rm = T),
LowSh = mean(shaem_cat == "light intensity", na.rm = T),
HighSh = mean(shaem_cat == "heavy intensity", na.rm = T),
# Intestinal
NumPeopleSm = sum(!is.na(smans_bin)),
PosPeopleSm = sum(smans_bin == 1, na.rm = T),
Sm = mean(smans_bin, na.rm = T),
ModSm = mean(smans_cat == "moderate intensity", na.rm = T),
HighSm = mean(smans_cat == "heavy intensity", na.rm = T),
# Other
Type = "Follow up 3",
Diagnostic = "UF / KK"
)
}
dsa_sth <- function(data){
data %>%
mutate(month = format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")) %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = min(month),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Ascaris
NumPeople_Asc = sum(!is.na(asc_bin)),
PosPeople_Asc = sum(asc_bin == 1, na.rm = T),
Asc = mean(asc_bin, na.rm = T),
Mod_Asc = mean(asc_cat == "moderate intensity", na.rm = T),
High_Asc = mean(asc_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeople_Hkw = sum(!is.na(hkw_bin)),
PosPeople_Hkw = sum(hkw_bin == 1, na.rm = T),
Hkw = mean(hkw_bin, na.rm = T),
Mod_Hkw = mean(hkw_cat == "moderate intensity", na.rm = T),
High_Hkw = mean(hkw_cat == "heavy intensity", na.rm = T),
# Trichuris
NumPeople_Tri = sum(!is.na(tri_bin)),
PosPeople_Tri = sum(tri_bin == 1, na.rm = T),
Tri = mean(tri_bin, na.rm = T),
Mod_Tri = mean(tri_cat == "moderate intensity", na.rm = T),
High_Tri = mean(tri_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeopleSm = sum(!is.na(sth_bin)),
PosPeopleSm = sum(sth_bin == 1, na.rm = T),
Sm = mean(sth_bin, na.rm = T),
# Other
Type = "Follow up 3"
)
}
#==========================================================================#
# Step 3 - Read in clean data ---------------------------------------------
#==========================================================================#
data <- read.csv("3_Clean_data/LBR_IS_FY_19_20_clean_data2020-04-17.csv", stringsAsFactors = F,
na.strings = c("", " ", "NA"))
#==========================================================================#
# Step 4 - Apply, store ---------------------------------------------------
#==========================================================================#
sch_data <- data %>% group_by(school_code) %>% dsa_sch() %>% select(-1)
stopifnot(all(nrow(sch_data) == n_distinct(data$school_code) &
nrow(sch_data) == n_distinct(data$school_label)))
test <- data %>%
mutate(month = format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B"))
test %>% group_by(school_code) %>% summarise(month = min(month))
test %>% group_by(school_code) %>% summarise(month = min(format(as.Date(data$visit_date, format = "%b %d, %Y"), "%B")))
#=================================================#
##### LBR 2019 ASCEND Impact #####
# DSA Reporting
# File created: 17/04/2020
# Contact person: Mario Gronert - m.gronert@schisto.org.uk
#=================================================#
#================================================================#
#### Step 1 - Define libraries, working folders, and minutiae ####
#================================================================#
rm(list = ls())
library(dplyr)
library(zoo)
library(reshape2)
library(stringr)
library(openxlsx)
library(tidyr)
options(dplyr.print_max = 1e9)
summarise  <- dplyr::summarise
select <- dplyr::select
setwd("Z:/Countries/Liberia/Impact/2019_ASCEND_F3")
#======================================================#
#### Step 2 - Introduce DSA/ESPEN format function ####
#======================================================#
dsa_sch <- function(data){
data %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = first(format(as.Date(visit_date, format = "%b %d, %Y"), "%B")),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Urinary
NumPeopleSh = sum(!is.na(shaem_bin)),
PosPeopleSh = sum(shaem_bin == 1, na.rm = T),
Sh = mean(shaem_bin, na.rm = T),
LowSh = mean(shaem_cat == "light intensity", na.rm = T),
HighSh = mean(shaem_cat == "heavy intensity", na.rm = T),
# Intestinal
NumPeopleSm = sum(!is.na(smans_bin)),
PosPeopleSm = sum(smans_bin == 1, na.rm = T),
Sm = mean(smans_bin, na.rm = T),
ModSm = mean(smans_cat == "moderate intensity", na.rm = T),
HighSm = mean(smans_cat == "heavy intensity", na.rm = T),
# Other
Type = "Follow up 3",
Diagnostic = "UF / KK"
)
}
dsa_sth <- function(data){
data %>%
summarise(
#General part
SurveyType = "Sentinel Site",
IU = first(admin_1_label),
School = first(school_label),
rounds = NA,
month = first(format(as.Date(visit_date, format = "%b %d, %Y"), "%B")),
Lat = first(lat),
Lon = first(lon),
Age = sprintf("%02d%02d", min(age, na.rm = T), max(age, na.rm = T)),
# Ascaris
NumPeople_Asc = sum(!is.na(asc_bin)),
PosPeople_Asc = sum(asc_bin == 1, na.rm = T),
Asc = mean(asc_bin, na.rm = T),
Mod_Asc = mean(asc_cat == "moderate intensity", na.rm = T),
High_Asc = mean(asc_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeople_Hkw = sum(!is.na(hkw_bin)),
PosPeople_Hkw = sum(hkw_bin == 1, na.rm = T),
Hkw = mean(hkw_bin, na.rm = T),
Mod_Hkw = mean(hkw_cat == "moderate intensity", na.rm = T),
High_Hkw = mean(hkw_cat == "heavy intensity", na.rm = T),
# Trichuris
NumPeople_Tri = sum(!is.na(tri_bin)),
PosPeople_Tri = sum(tri_bin == 1, na.rm = T),
Tri = mean(tri_bin, na.rm = T),
Mod_Tri = mean(tri_cat == "moderate intensity", na.rm = T),
High_Tri = mean(tri_cat == "heavy intensity", na.rm = T),
# Hookworm
NumPeopleSm = sum(!is.na(sth_bin)),
PosPeopleSm = sum(sth_bin == 1, na.rm = T),
Sm = mean(sth_bin, na.rm = T),
# Other
Type = "Follow up 3"
)
}
#==========================================================================#
# Step 3 - Read in clean data ---------------------------------------------
#==========================================================================#
data <- read.csv("3_Clean_data/LBR_IS_FY_19_20_clean_data2020-04-17.csv", stringsAsFactors = F,
na.strings = c("", " ", "NA"))
#==========================================================================#
# Step 4 - Apply, store ---------------------------------------------------
#==========================================================================#
sch_data <- data %>% group_by(school_code) %>% dsa_sch() %>% select(-1)
stopifnot(all(nrow(sch_data) == n_distinct(data$school_code) &
nrow(sch_data) == n_distinct(data$school_label)))
sth_data <- data %>% group_by(school_code) %>% dsa_sth() %>% select(-1)
stopifnot(all(nrow(sth_data) == n_distinct(data$school_code) &
nrow(sth_data) == n_distinct(data$school_label)))
write.csv(sch_data, "5_Results/Tables/LBR_IS_FY_19_20_DSA_SCH.csv", na = "", row.names = F)
write.csv(sth_data, "5_Results/Tables/LBR_IS_FY_19_20_DSA_STH.csv", na = "", row.names = F)
